#!/bin/bash
## Semi-automatic script to download build and install ffmpeg-full on arch linux
## Req.: grep hash head tail wc git wget make gcc... Use: ./get_ffmpeg-full_arch
## Author Andrew S. Licence GPL
## https://github.com/quarkscript/Build_from_source
## https://gitlab.com/quarkscript/arch_linux_scripts/tree/master/pkgs_builds_scripts


if [ ! -f sfslib ]; then
## get required Simple_func_scripts from github source
wget https://raw.githubusercontent.com/quarkscript/Simple_func_scripts/master/sfslib
fi
if [ ! -f sfslib ]; then
## get required Simple_func_scripts from gitlab source
wget https://gitlab.com/quarkscript/arch_linux_scripts/raw/master/pkgs_builds_scripts/sfslib
fi
chmod +x sfslib
if [ ! -x sfslib ]; then
    echo '
There is some problem of getting required sfslib
you may download it manually from one of sourses:
https://github.com/quarkscript/Build_from_source
https://gitlab.com/quarkscript/arch_linux_scripts/tree/master/pkgs_builds_scripts
Build process interrupted'
    exit 1
fi
./sfslib cxx_flags

## For make a local hardware independent builds uncomment next line
#echo "">cxxflags.txt

mkdir aur_depends
cp cxxflags.txt aur_depends
cp aur_depends ffmpeg -r

## add a custom aur links
aur_ffdep='https://aur.archlinux.org/intel-media-driver.git '

cd ffmpeg
git clone https://aur.archlinux.org/ffmpeg-full.git

## switch to chromaprint if chromaprint-fftw isn't option
if  $(pacman -Qqe | grep -xq chromaprint); then
    ../sfslib mcolif 'ffmpeg-full/PKGBUILD' 'chromaprint-fftw' 'chromaprint-fftw' 'chromaprint'
fi

echo "">deps1
echo "">deps2
../sfslib edfpb "ffmpeg-full/PKGBUILD"
cat deps2 >>deps1
cat deps1 >>ffmpeg_full_req
../sfslib edfpb "ffmpeg-full/PKGBUILD" "depends='"
cat deps2 >>deps1
cat deps1 >>ffmpeg_full_req
../sfslib edfpb "ffmpeg-full/PKGBUILD" "depends_x86_64="
cat deps2 >>deps1
cat deps1 >>ffmpeg_full_req

echo "
Searching required packages in the official repository, 
if they aren't there, then they are in the AUR..."
for i in $(../sfslib s_un_pk "$(cat ffmpeg_full_req)"); do
    aur_ffdep+="https://aur.archlinux.org/$i.git "
done

cd ../aur_depends
for i in $(echo $aur_ffdep )
    do
    git clone $i
done

echo "">deps1
echo "">deps2
for i in $(ls -d */ | sed -e 's/\///g')
    do
    ../sfslib edfpb "$i/PKGBUILD"
    cat deps2 >>deps1
    cat deps1 >>aur_dep_list
    ../sfslib edfpb "$i/PKGBUILD" "checkdepends=("
    cat deps2 >>deps1
    cat deps1 >>aur_dep_list
done

## get aur req packs
../sfslib rmdtpi "aur_dep_list"
 req_pack_list=$(cat aur_dep_list.req | sed 's/intel-media-driver//g')
if [ "$req_pack_list" != "" ]
    then
        echo !!!
        echo build aur depends of ffmpeg-full require absent packages:
        echo $req_pack_list
        echo !!! super-user password is required to install it
        sudo pacman -S --needed $req_pack_list
fi

## firstly make and install intel-media-driver
make_and_install_intel_md(){
mkdir 1
mv -f intel-media-driver 1/
cp cxxflags.txt 1/
cd 1
../../sfslib mpbsmpks -u
if $(ls | grep -q pkg.tar.xz); then
    echo !!! 
    echo super-user password is required to install intel-media-driver
    sudo pacman -U *pkg.tar.xz
fi
cd ..
mv -f 1 ../inteldriver
}
## this block is organized as a function because it can be 
## simply ignored in case of build another ffmpeg-pkg variants
make_and_install_intel_md

## due to PKGBUILD can be written in non unique way, some mods of some PKGBUILDs need to be applied manual...
../sfslib mcolif 'libilbc/PKGBUILD' 'make' 'make' "make -j$(($(grep 'model name' /proc/cpuinfo --count)+1))"
../sfslib mcolif 'libopenmpt-svn/PKGBUILD' 'make ' 'make ' "make -j$(($(grep 'model name' /proc/cpuinfo --count)+1)) "

## rm sha checks from ndi-sdk, its a not good idia actually
../sfslib mcolif 'ndi-sdk/PKGBUILD' 'sha256sums' 'sha256sums' 'sha256sums=(SKIP) forget_it'

## make and install other req. aur packages
../sfslib mpbsmpks -u
if $(ls | grep -q pkg.tar.xz); then
    echo !!!
    echo super-user password is required to install aur deps of ffmpeg-full
    sudo pacman -U *pkg.tar.xz
fi

cd ../ffmpeg
../sfslib rmdtpi "ffmpeg_full_req"
req_pack_list_ffmpeg=$(cat ffmpeg_full_req.req)
if [ "$req_pack_list_ffmpeg" != "" ]
    then
        echo !!!
        echo build ffmpeg-full require absent packages:
        echo $req_pack_list_ffmpeg
        echo !!!
        echo super-user password is required to install it
        sudo pacman -S --needed $req_pack_list_ffmpeg
fi

## remove pgp and sha checks, don't do it if you don't know why
../sfslib mcolif 'ffmpeg-full/PKGBUILD' '{,.asc}' '{,.asc}' ''
../sfslib mcolif 'ffmpeg-full/PKGBUILD' 'sha256sums=(' 'sha256sums=(' 'sha256sums=("SKIP" "SKIP"); forgetit=('

## make and install ffmpeg-full
extrafl='--extra-cxxflags=" '
extrafl+=$(cat cxxflags.txt)
extrafl+=' " \'

../sfslib adnlalwp 'ffmpeg-full/PKGBUILD' 'prefix=' "$extrafl" 

../sfslib mpbsmpks
echo !!!
echo super-user password is required for install ffmpeg-full
sudo pacman -U *pkg.tar.xz

## as intelmedia propose
if ( $(lspci | grep VGA | grep Intel -q) ); then
    cat /etc/profile.d/intel-media.sh | sed -e 's/#export LIBVA_DRIVER_NAME=iHD/export LIBVA_DRIVER_NAME=iHD/g'>intel-media.sh
    sudo mv -f intel-media.sh /etc/profile.d/intel-media.sh
fi
